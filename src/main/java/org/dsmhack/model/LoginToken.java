/*
 * Here to Help
 * This is a restful web service used to log hours for non-profits to submit for money grants.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.dsmhack.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import javax.persistence.Entity;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.UUID;

/**
 * LoginToken
 */
@Entity
public class LoginToken {
    @JsonProperty("user_id")
    private UUID userId = null;

    @JsonProperty("login_token")
    private String loginToken = null;

    @JsonProperty("login_token_expiration")
    private OffsetDateTime loginTokenExpiration = null;

    public LoginToken userId(UUID userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Get userId
     *
     * @return userId
     **/
    public UUID getUserId() {
        return userId;
    }

    public void setUserId(UUID userId) {
        this.userId = userId;
    }

    public LoginToken loginToken(String loginToken) {
        this.loginToken = loginToken;
        return this;
    }

    /**
     * Get loginToken
     *
     * @return loginToken
     **/
    public String getLoginToken() {
        return loginToken;
    }

    public void setLoginToken(String loginToken) {
        this.loginToken = loginToken;
    }

    public LoginToken loginTokenExpiration(OffsetDateTime loginTokenExpiration) {
        this.loginTokenExpiration = loginTokenExpiration;
        return this;
    }

    /**
     * Get loginTokenExpiration
     *
     * @return loginTokenExpiration
     **/
    public OffsetDateTime getLoginTokenExpiration() {
        return loginTokenExpiration;
    }

    public void setLoginTokenExpiration(OffsetDateTime loginTokenExpiration) {
        this.loginTokenExpiration = loginTokenExpiration;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LoginToken loginToken = (LoginToken) o;
        return Objects.equals(this.userId, loginToken.userId) &&
                Objects.equals(this.loginToken, loginToken.loginToken) &&
                Objects.equals(this.loginTokenExpiration, loginToken.loginTokenExpiration);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userId, loginToken, loginTokenExpiration);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LoginToken {\n");

        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    loginToken: ").append(toIndentedString(loginToken)).append("\n");
        sb.append("    loginTokenExpiration: ").append(toIndentedString(loginTokenExpiration)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

