/*
 * Here to Help
 * This is a restful web service used to log hours for non-profits to submit for money grants.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.dsmhack.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import javax.persistence.Entity;
import java.util.Objects;
import java.util.UUID;

/**
 * Organization
 */
@Entity
public class Organization {
    @JsonProperty("organization_id")
    private UUID organizationId = null;

    @JsonProperty("name")
    private String name = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("email")
    private String email = null;

    @JsonProperty("phone_number")
    private String phoneNumber = null;

    @JsonProperty("website_url")
    private String websiteUrl = null;

    @JsonProperty("facebook_url")
    private String facebookUrl = null;

    @JsonProperty("twitter_url")
    private String twitterUrl = null;

    @JsonProperty("instagram_url")
    private String instagramUrl = null;

    public Organization organizationId(UUID organizationId) {
        this.organizationId = organizationId;
        return this;
    }

    /**
     * Get organizationId
     *
     * @return organizationId
     **/
    public UUID getOrganizationId() {
        return organizationId;
    }

    public void setOrganizationId(UUID organizationId) {
        this.organizationId = organizationId;
    }

    public Organization name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Organization description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Organization email(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get email
     *
     * @return email
     **/
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Organization phoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * Get phoneNumber
     *
     * @return phoneNumber
     **/
    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public Organization websiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }

    /**
     * Get websiteUrl
     *
     * @return websiteUrl
     **/
    public String getWebsiteUrl() {
        return websiteUrl;
    }

    public void setWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
    }

    public Organization facebookUrl(String facebookUrl) {
        this.facebookUrl = facebookUrl;
        return this;
    }

    /**
     * Get facebookUrl
     *
     * @return facebookUrl
     **/
    public String getFacebookUrl() {
        return facebookUrl;
    }

    public void setFacebookUrl(String facebookUrl) {
        this.facebookUrl = facebookUrl;
    }

    public Organization twitterUrl(String twitterUrl) {
        this.twitterUrl = twitterUrl;
        return this;
    }

    /**
     * Get twitterUrl
     *
     * @return twitterUrl
     **/
    public String getTwitterUrl() {
        return twitterUrl;
    }

    public void setTwitterUrl(String twitterUrl) {
        this.twitterUrl = twitterUrl;
    }

    public Organization instagramUrl(String instagramUrl) {
        this.instagramUrl = instagramUrl;
        return this;
    }

    /**
     * Get instagramUrl
     *
     * @return instagramUrl
     **/
    public String getInstagramUrl() {
        return instagramUrl;
    }

    public void setInstagramUrl(String instagramUrl) {
        this.instagramUrl = instagramUrl;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Organization organization = (Organization) o;
        return Objects.equals(this.organizationId, organization.organizationId) &&
                Objects.equals(this.name, organization.name) &&
                Objects.equals(this.description, organization.description) &&
                Objects.equals(this.email, organization.email) &&
                Objects.equals(this.phoneNumber, organization.phoneNumber) &&
                Objects.equals(this.websiteUrl, organization.websiteUrl) &&
                Objects.equals(this.facebookUrl, organization.facebookUrl) &&
                Objects.equals(this.twitterUrl, organization.twitterUrl) &&
                Objects.equals(this.instagramUrl, organization.instagramUrl);
    }

    @Override
    public int hashCode() {
        return Objects.hash(organizationId, name, description, email, phoneNumber, websiteUrl, facebookUrl, twitterUrl, instagramUrl);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Organization {\n");

        sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
        sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
        sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
        sb.append("    twitterUrl: ").append(toIndentedString(twitterUrl)).append("\n");
        sb.append("    instagramUrl: ").append(toIndentedString(instagramUrl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

