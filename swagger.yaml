swagger: "2.0"
info:
  description: "This is a restful web service used to log hours for non-profits to submit for money grants."
  version: "1.0.0"
  title: "Here to Help"

paths:
  /login/sendCode:
    post:
      summary: "sending login code"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "user email address"
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
  /login/verifyCode:
    post:
      summary: "verifying security token"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "secruity token"
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
  /organizations:
    get:
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Organization"
  /organizations/{organization_id}:
    get:
      parameters:
        - in: path
          name: organization_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Organization"
  /organizations/{organization_id}/projects:
    get:
      parameters:
        - in: path
          name: organization_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Organization"
  /organizations/{organization_id}/reports:
    get:
      parameters:
        - in: path
          name: organization_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Report_Organization"
  /projects:
    get:
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Project"
    post:
      summary: "adding project"
      parameters:
      - in: body
        name: "Project"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Project"
  /projects/{project_id}:
    get:
      parameters:
        - in: path
          name: project_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
              $ref: "#/definitions/Project"
  /projects/{project_id}/check-ins:
    get:
      parameters:
        - in: path
          name: project_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Check_In"
    post:
      parameters:
        - in: path
          name: project_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Check_In"
    put:
      description: Updates the check-in with an end time
      parameters:
      - in: path
        name: project_id
        type: string
        format: uuid
        required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Check_In"
  /projects/{project_id}/users:
    get:
      parameters:
        - in: path
          name: project_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
  /projects/{project_id}/user:
    post:
      parameters:
        - in: path
          name: project_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User_Project"
  /users:
    get:
      summary: Get All Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"
    post:
      summary: Add a new User
      parameters:
      - in: body
        name: "User"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"
  /users/{user_guid}/projects:
    get:
      summary: Get All User Projects
      parameters:
        - in: path
          name: user_guid
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"

definitions:
  User:
    type: "object"
    required:
    - "first_name"
    - "last_name"
    - "email"
    - "role"
    properties:
      user_guid:
        type: "string"
        format: "uuid"
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
        format: "email"
      role:
        type: "string"
        description: "Order Status"
  Login_Token:
    type: "object"
    required:
    - "user_guid"
    - "login_token"
    - "login_token_expiration"
    properties:
      user_guid:
        type: "string"
        format: "uuid"
      login_token:
        type: "string"
      login_token_expiration:
        type: "string"
        format: "date-time"
  Organization:
    type: "object"
    required:
    - "organization_guid"
    - "name"
    - "description"
    properties:
      organization_guid:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      description:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone_number:
        type: "string"
      website_url:
        type: "string"
      facebook_url:
        type: "string"
      twitter_url:
        type: "string"
      instagram_url:
        type: "string"
      address1:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zip:
        type: "string"
  User_Organization:
    type: "object"
    required:
    - "user_guid"
    - "organization_guid"
    properties:
      user_guid:
        type: "string"
        format: "uuid"
      organization_guid:
        type: "string"
        format: "uuid"
  Project:
    type: "object"
    required:
    - "project_guid"
    - "name"
    - "start_date"
    - "end_date"
    properties:
      project_guid:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      description:
        type: "string"
      start_date:
        type: "string"
        format: "date-time"
      end_date:
        type: "string"
        format: "date-time"
  User_Project:
    type: "object"
    required:
    - "user_guid"
    - "project_guid"
    properties:
      user_guid:
        type: "string"
        format: "uuid"
      project_guid:
        type: "string"
        format: "uuid"
  Check_In:
    type: "object"
    required:
    - "user_guid"
    - "project_guid"
    - "time_in"
    - "time_out"
    properties:
      user_guid:
        type: "string"
        format: "uuid"
      project_guid:
        type: "string"
        format: "uuid"
      time_in:
        type: "string"
        format: "date-time"
      time_out:
        type: "string"
        format: "date-time"
  Report_Organization:
    type: "object"
    properties:
      projects:
        type: array
        items:
          $ref: "#/definitions/Report_Project"
      users:
        type: array
        items:
          $ref: "#/definitions/Report_User"
      total_hours:
        type: "number"
        format: "double"
  Report_User:
    type: "object"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      projects:
        type: array
        items:
          $ref: "#/definitions/Report_Project"
      total_hours:
        type: "number"
        format: "double"
  Report_Project:
    type: "object"
    properties:
      name:
        type: "string"
      total_hours:
        type: "number"
        format: "double"
