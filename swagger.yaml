swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: report-controller
    description: Report Controller
  - name: project-controller
    description: Project Controller
  - name: login-controller
    description: Login Controller
  - name: user-controller
    description: User Controller
  - name: organization-controller
    description: Organization Controller
paths:
  /login/sendCode:
    post:
      tags:
        - login-controller
      summary: login
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: emailAddress
          description: emailAddress
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /login/verifyCode:
    post:
      tags:
        - login-controller
      summary: verifyCode
      operationId: verifyCodeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securityToken
          description: securityToken
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organizations:
    get:
      tags:
        - organization-controller
      summary: getAllOrganizations
      operationId: getAllOrganizationsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizations/{organizationId}':
    get:
      tags:
        - organization-controller
      summary: getOrganizationBy
      operationId: getOrganizationByUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizations/{organizationId}/projects':
    get:
      tags:
        - organization-controller
      summary: findProjectsForOrganization
      operationId: findProjectsForOrganizationUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizations/{organizationId}/reports':
    get:
      tags:
        - report-controller
      summary: getReportOrganization
      operationId: getReportOrganizationUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReportOrganization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /projects:
    get:
      tags:
        - project-controller
      summary: getAllProjects
      operationId: getAllProjectsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - project-controller
      summary: save
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: project
          description: project
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/projects/{projectId}':
    get:
      tags:
        - project-controller
      summary: getProjectById
      operationId: getProjectByIdUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/projects/{projectId}/check-ins':
    get:
      tags:
        - project-controller
      summary: findAllCheckins
      operationId: findAllCheckinsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CheckIn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - project-controller
      summary: checkUserIn
      operationId: checkUserInUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          type: string
        - in: body
          name: userGuid
          description: userGuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckIn'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - project-controller
      summary: checkOutUser
      operationId: checkOutUserUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          type: string
        - in: body
          name: userGuid
          description: userGuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckIn'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/projects/{projectId}/user':
    post:
      tags:
        - project-controller
      summary: addUser
      operationId: addUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          type: string
        - in: body
          name: userGuid
          description: userGuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserProject'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /users:
    get:
      tags:
        - user-controller
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: save
      operationId: saveUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{userGuid}/check-ins':
    get:
      tags:
        - user-controller
      summary: getCheckins
      operationId: getCheckinsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userGuid
          in: path
          description: userGuid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CheckIn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{userGuid}/check-ins/active':
    get:
      tags:
        - user-controller
      summary: getActiveCheckins
      operationId: getActiveCheckinsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userGuid
          in: path
          description: userGuid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CheckIn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{userGuid}/projects':
    get:
      tags:
        - user-controller
      summary: getUsersAndProjects
      operationId: getUsersAndProjectsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userGuid
          in: path
          description: userGuid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{userId}':
    get:
      tags:
        - user-controller
      summary: getUserById
      operationId: getUserByIdUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  CheckIn:
    type: object
    properties:
      projGuid:
        type: string
      timeIn:
        $ref: '#/definitions/Timestamp'
      timeOut:
        $ref: '#/definitions/Timestamp'
      userGuid:
        type: string
  MyKey:
    type: object
    properties:
      projGuid:
        type: string
      userGuid:
        type: string
  Organization:
    type: object
    properties:
      address1:
        type: string
      city:
        type: string
      description:
        type: string
      email:
        type: string
      facebookUrl:
        type: string
      instagramUrl:
        type: string
      name:
        type: string
      organizationId:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      twitterUrl:
        type: string
      websiteUrl:
        type: string
      zip:
        type: string
  Project:
    type: object
    properties:
      description:
        type: string
      endDate:
        $ref: '#/definitions/Timestamp'
      name:
        type: string
      orgGuid:
        type: string
      projGuid:
        type: string
      projId:
        type: string
      startDate:
        $ref: '#/definitions/Timestamp'
  ReportOrganization:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/ReportProject'
      totalHours:
        type: integer
        format: int32
      users:
        type: array
        items:
          $ref: '#/definitions/ReportUser'
  ReportProject:
    type: object
    properties:
      name:
        type: string
      totalHours:
        type: integer
        format: int32
  ReportUser:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      projects:
        type: array
        items:
          $ref: '#/definitions/ReportProject'
      totalHours:
        type: integer
        format: int32
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        type: integer
        format: int32
  Timestamp:
    type: object
    properties:
      date:
        type: integer
        format: int32
      day:
        type: integer
        format: int32
      hours:
        type: integer
        format: int32
      minutes:
        type: integer
        format: int32
      month:
        type: integer
        format: int32
      nanos:
        type: integer
        format: int32
      seconds:
        type: integer
        format: int32
      time:
        type: integer
        format: int64
      timezoneOffset:
        type: integer
        format: int32
      year:
        type: integer
        format: int32
  User:
    type: object
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      projectList:
        type: array
        items:
          $ref: '#/definitions/Project'
      role:
        type: string
      userGuid:
        type: string
      userId:
        type: string
  UserProject:
    type: object
    properties:
      myKey:
        $ref: '#/definitions/MyKey'
